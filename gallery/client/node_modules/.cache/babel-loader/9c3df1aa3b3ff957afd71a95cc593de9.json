{"ast":null,"code":"import { $authHost, $host } from \"./index\";\nimport jwt_decode from \"jwt-decode\"; //для раскодировки jwt токена\n\nexport const registration = async (email, password) => {\n  console.log($host);\n  const {\n    data\n  } = await $host.post('api/user/registration', {\n    email,\n    password,\n    role: 'ADMIN'\n  }); //ответ, который будет возвращаться из сервера\n\n  localStorage.setItem('token', data.token);\n  return jwt_decode(data.token);\n};\nexport const login = async (email, password) => {\n  const {\n    data\n  } = await $host.post('api/user/login', {\n    email,\n    password\n  });\n  localStorage.setItem('token', data.token); //добавление токена в локальное хранилище\n\n  return jwt_decode(data.token);\n};\nexport const check = async () => {\n  const {\n    data\n  } = await $authHost.get('api/user/auth');\n  localStorage.setItem('token', data.token);\n  return jwt_decode(data.token);\n};","map":{"version":3,"sources":["C:/OpenServer/domains/internet-shop/client/src/http/UserApi.js"],"names":["$authHost","$host","jwt_decode","registration","email","password","console","log","data","post","role","localStorage","setItem","token","login","check","get"],"mappings":"AAAA,SAAQA,SAAR,EAAmBC,KAAnB,QAA+B,SAA/B;AACA,OAAOC,UAAP,MAAuB,YAAvB,C,CAAqC;;AAErC,OAAO,MAAMC,YAAY,GAAG,OAAOC,KAAP,EAAcC,QAAd,KAA2B;AACnDC,EAAAA,OAAO,CAACC,GAAR,CAAYN,KAAZ;AACA,QAAM;AAACO,IAAAA;AAAD,MAAS,MAAMP,KAAK,CAACQ,IAAN,CAAW,uBAAX,EAAoC;AAACL,IAAAA,KAAD;AAAQC,IAAAA,QAAR;AAAkBK,IAAAA,IAAI,EAAE;AAAxB,GAApC,CAArB,CAFmD,CAEuC;;AAC1FC,EAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BJ,IAAI,CAACK,KAAnC;AACA,SAAOX,UAAU,CAACM,IAAI,CAACK,KAAN,CAAjB;AACH,CALM;AAOP,OAAO,MAAMC,KAAK,GAAG,OAAOV,KAAP,EAAcC,QAAd,KAA2B;AAC5C,QAAM;AAACG,IAAAA;AAAD,MAAS,MAAMP,KAAK,CAACQ,IAAN,CAAW,gBAAX,EAA6B;AAACL,IAAAA,KAAD;AAAQC,IAAAA;AAAR,GAA7B,CAArB;AACAM,EAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BJ,IAAI,CAACK,KAAnC,EAF4C,CAEH;;AACzC,SAAOX,UAAU,CAACM,IAAI,CAACK,KAAN,CAAjB;AACH,CAJM;AAMP,OAAO,MAAME,KAAK,GAAG,YAAY;AAC7B,QAAM;AAACP,IAAAA;AAAD,MAAS,MAAMR,SAAS,CAACgB,GAAV,CAAc,eAAd,CAArB;AACAL,EAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BJ,IAAI,CAACK,KAAnC;AACA,SAAOX,UAAU,CAACM,IAAI,CAACK,KAAN,CAAjB;AACH,CAJM","sourcesContent":["import {$authHost, $host} from \"./index\";\r\nimport jwt_decode from \"jwt-decode\"; //для раскодировки jwt токена\r\n\r\nexport const registration = async (email, password) => {\r\n    console.log($host)\r\n    const {data} = await $host.post('api/user/registration', {email, password, role: 'ADMIN'})//ответ, который будет возвращаться из сервера\r\n    localStorage.setItem('token', data.token)\r\n    return jwt_decode(data.token)\r\n}\r\n\r\nexport const login = async (email, password) => {\r\n    const {data} = await $host.post('api/user/login', {email, password})\r\n    localStorage.setItem('token', data.token)//добавление токена в локальное хранилище\r\n    return jwt_decode(data.token)\r\n}\r\n\r\nexport const check = async () => {\r\n    const {data} = await $authHost.get('api/user/auth' )\r\n    localStorage.setItem('token', data.token)\r\n    return jwt_decode(data.token)\r\n}"]},"metadata":{},"sourceType":"module"}