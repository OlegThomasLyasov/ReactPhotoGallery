{"ast":null,"code":"import { makeAutoObservable } from 'mobx'; //изменения \n\nexport default class PhotoStore {\n  constructor() {\n    this._types = [];\n    this._photo = [];\n    this._selectedType = {};\n    this._page = 1;\n    this._totalCount = 0;\n    this._limit = 8;\n    this._count = 0;\n    makeAutoObservable(this); //слежка за изменениями\n  } //при изменении перерендеринг\n\n\n  setTypes(types) {\n    this._types = types;\n  }\n\n  setPhotos(photo) {\n    this._photo = photo;\n  }\n\n  setSelectedType(type) {\n    this.setPage(1);\n    this._count = this._count + 1;\n    console.log(this._count);\n\n    if (this._count % 2 != 0 && this._selectedType == type) {\n      this._selectedType = type;\n      console.log('Ок');\n    } else {\n      console.log('Брух');\n      this._selectedType = 0;\n    } //console.log(this._selectedType )\n    //alert(`Успешно ${type.id}`)\n\n  }\n\n  setPage(page) {\n    this._page = page;\n  }\n\n  setTotalCount(count) {\n    this._totalCount = count;\n  } //компьютед функции, вызываются только при изменении\n\n\n  get types() {\n    return this._types;\n  }\n\n  get photos() {\n    return this._photo;\n  }\n\n  get selectedType() {\n    return this._selectedType;\n  }\n\n  get totalCount() {\n    return this._totalCount;\n  }\n\n  get page() {\n    return this._page;\n  }\n\n  get limit() {\n    return this._limit;\n  }\n\n}","map":{"version":3,"sources":["C:/OpenServer/domains/gallery/client/src/photo/photoStore.js"],"names":["makeAutoObservable","PhotoStore","constructor","_types","_photo","_selectedType","_page","_totalCount","_limit","_count","setTypes","types","setPhotos","photo","setSelectedType","type","setPage","console","log","page","setTotalCount","count","photos","selectedType","totalCount","limit"],"mappings":"AAAA,SAAQA,kBAAR,QAAiC,MAAjC,C,CAAwC;;AAGxC,eAAe,MAAMC,UAAN,CAAiB;AAE5BC,EAAAA,WAAW,GAAE;AAET,SAAKC,MAAL,GAAc,EAAd;AACA,SAAKC,MAAL,GAAc,EAAd;AACA,SAAKC,aAAL,GAAqB,EAArB;AACA,SAAKC,KAAL,GAAa,CAAb;AACA,SAAKC,WAAL,GAAmB,CAAnB;AACA,SAAKC,MAAL,GAAc,CAAd;AACA,SAAKC,MAAL,GAAa,CAAb;AACAT,IAAAA,kBAAkB,CAAC,IAAD,CAAlB,CATS,CASe;AAE3B,GAb2B,CAc5B;;;AAEAU,EAAAA,QAAQ,CAACC,KAAD,EAAQ;AACZ,SAAKR,MAAL,GAAcQ,KAAd;AACH;;AAEDC,EAAAA,SAAS,CAACC,KAAD,EAAQ;AACb,SAAKT,MAAL,GAAcS,KAAd;AACH;;AAEDC,EAAAA,eAAe,CAACC,IAAD,EAAO;AAElB,SAAKC,OAAL,CAAa,CAAb;AACA,SAAKP,MAAL,GAAc,KAAKA,MAAL,GAAc,CAA5B;AACAQ,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKT,MAAjB;;AACA,QAAI,KAAKA,MAAL,GAAY,CAAZ,IAAe,CAAf,IAAoB,KAAKJ,aAAL,IAAsBU,IAA9C,EAAmD;AAC/C,WAAKV,aAAL,GAAqBU,IAArB;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACC,KAHL,MAII;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACA,WAAKb,aAAL,GAAmB,CAAnB;AACH,KAZiB,CAalB;AACA;;AACH;;AAEDW,EAAAA,OAAO,CAACG,IAAD,EAAO;AACV,SAAKb,KAAL,GAAaa,IAAb;AACH;;AAEDC,EAAAA,aAAa,CAACC,KAAD,EAAQ;AACjB,SAAKd,WAAL,GAAmBc,KAAnB;AACH,GA/C2B,CAiD5B;;;AACS,MAALV,KAAK,GAAG;AACR,WAAO,KAAKR,MAAZ;AACH;;AAES,MAANmB,MAAM,GAAG;AACT,WAAO,KAAKlB,MAAZ;AACH;;AACe,MAAZmB,YAAY,GAAG;AACf,WAAO,KAAKlB,aAAZ;AACH;;AACa,MAAVmB,UAAU,GAAG;AACb,WAAO,KAAKjB,WAAZ;AACH;;AACO,MAAJY,IAAI,GAAG;AACP,WAAO,KAAKb,KAAZ;AACH;;AACQ,MAALmB,KAAK,GAAG;AACR,WAAO,KAAKjB,MAAZ;AACH;;AApE2B","sourcesContent":["import {makeAutoObservable} from 'mobx' //изменения \r\n\r\n\r\nexport default class PhotoStore {\r\n    \r\n    constructor(){\r\n\r\n        this._types = []\r\n        this._photo = []\r\n        this._selectedType = {}\r\n        this._page = 1\r\n        this._totalCount = 0\r\n        this._limit = 8\r\n        this._count =0\r\n        makeAutoObservable(this)//слежка за изменениями\r\n        \r\n    }\r\n    //при изменении перерендеринг\r\n\r\n    setTypes(types) {\r\n        this._types = types\r\n    }\r\n\r\n    setPhotos(photo) {\r\n        this._photo = photo\r\n    }\r\n\r\n    setSelectedType(type) {\r\n\r\n        this.setPage(1)\r\n        this._count = this._count + 1\r\n        console.log(this._count)\r\n        if (this._count%2!=0 && this._selectedType == type){\r\n            this._selectedType = type\r\n            console.log('Ок')\r\n            }\r\n        else{\r\n            console.log('Брух')\r\n            this._selectedType=0\r\n        }\r\n        //console.log(this._selectedType )\r\n        //alert(`Успешно ${type.id}`)\r\n    }\r\n\r\n    setPage(page) {\r\n        this._page = page\r\n    }\r\n    \r\n    setTotalCount(count) {\r\n        this._totalCount = count\r\n    }\r\n\r\n    //компьютед функции, вызываются только при изменении\r\n    get types() {\r\n        return this._types\r\n    }\r\n\r\n    get photos() {\r\n        return this._photo\r\n    }\r\n    get selectedType() {\r\n        return this._selectedType\r\n    }\r\n    get totalCount() {\r\n        return this._totalCount\r\n    }\r\n    get page() {\r\n        return this._page\r\n    }\r\n    get limit() {\r\n        return this._limit\r\n    }\r\n\r\n\r\n\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}