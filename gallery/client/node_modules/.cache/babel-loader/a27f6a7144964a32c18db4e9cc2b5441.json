{"ast":null,"code":"import { makeAutoObservable } from 'mobx'; //изменения \n\nexport default class PhotoStore {\n  constructor() {\n    this._types = [{\n      id: 1,\n      name: 'Ваши фото'\n    }, {\n      id: 2,\n      name: 'Популярные фото'\n    }, {\n      id: 3,\n      name: 'Фото друзей'\n    }, {\n      id: 2,\n      name: 'Фото природы'\n    }, {\n      id: 2,\n      name: 'Смешные фото'\n    }];\n    this._photo = [{\n      id: 1,\n      name: \"Фотография любимой\",\n      img: 'Фото солнышка'\n    }, {\n      id: 2,\n      name: \"Фотография себя\",\n      img: ''\n    }];\n    makeAutoObservable(this); //слежка за изменениями\n  } //при изменении перерендеринг\n\n\n  setTypes(bool) {\n    this._types = bool;\n  }\n\n  setPhoto(user) {\n    this._photo = user;\n  }\n\n  setSelectedType(type) {\n    this.setPage(1);\n    this._selectedType = type;\n  }\n\n  setPage(page) {\n    this._page = page;\n  }\n\n  setTotalCount(count) {\n    this._totalCount = count;\n  }\n\n  get types() {\n    return this._types;\n  }\n\n  get devices() {\n    return this._devices;\n  }\n\n  get selectedType() {\n    return this._selectedType;\n  }\n\n  get totalCount() {\n    return this._totalCount;\n  }\n\n  get page() {\n    return this._page;\n  }\n\n  get limit() {\n    return this._limit;\n  } //компьютед функции, вызываются только при изменении\n\n\n  get isTypes() {\n    return this._types;\n  }\n\n  get isPhoto() {\n    return this._photo;\n  }\n\n}","map":{"version":3,"sources":["C:/OpenServer/domains/gallery/client/src/photo/photoStore.js"],"names":["makeAutoObservable","PhotoStore","constructor","_types","id","name","_photo","img","setTypes","bool","setPhoto","user","setSelectedType","type","setPage","_selectedType","page","_page","setTotalCount","count","_totalCount","types","devices","_devices","selectedType","totalCount","limit","_limit","isTypes","isPhoto"],"mappings":"AAAA,SAAQA,kBAAR,QAAiC,MAAjC,C,CAAwC;;AAGxC,eAAe,MAAMC,UAAN,CAAgB;AAC3BC,EAAAA,WAAW,GAAE;AACT,SAAKC,MAAL,GAAa,CACT;AAACC,MAAAA,EAAE,EAAC,CAAJ;AAAOC,MAAAA,IAAI,EAAC;AAAZ,KADS,EAET;AAAED,MAAAA,EAAE,EAAC,CAAL;AAAQC,MAAAA,IAAI,EAAC;AAAb,KAFS,EAGT;AAAED,MAAAA,EAAE,EAAC,CAAL;AAAQC,MAAAA,IAAI,EAAC;AAAb,KAHS,EAIT;AAAED,MAAAA,EAAE,EAAC,CAAL;AAAQC,MAAAA,IAAI,EAAC;AAAb,KAJS,EAKT;AAAED,MAAAA,EAAE,EAAC,CAAL;AAAQC,MAAAA,IAAI,EAAC;AAAb,KALS,CAAb;AAOA,SAAKC,MAAL,GAAa,CACT;AAACF,MAAAA,EAAE,EAAC,CAAJ;AAAOC,MAAAA,IAAI,EAAE,oBAAb;AAAkCE,MAAAA,GAAG,EAAC;AAAtC,KADS,EAET;AAACH,MAAAA,EAAE,EAAC,CAAJ;AAAOC,MAAAA,IAAI,EAAE,iBAAb;AAA+BE,MAAAA,GAAG,EAAC;AAAnC,KAFS,CAAb;AAKAP,IAAAA,kBAAkB,CAAC,IAAD,CAAlB,CAbS,CAae;AAE3B,GAhB0B,CAgB1B;;;AAEDQ,EAAAA,QAAQ,CAACC,IAAD,EAAM;AACV,SAAKN,MAAL,GAAcM,IAAd;AACH;;AAEDC,EAAAA,QAAQ,CAACC,IAAD,EAAM;AACV,SAAKL,MAAL,GAAcK,IAAd;AACH;;AACDC,EAAAA,eAAe,CAACC,IAAD,EAAO;AAClB,SAAKC,OAAL,CAAa,CAAb;AACA,SAAKC,aAAL,GAAqBF,IAArB;AACH;;AACDC,EAAAA,OAAO,CAACE,IAAD,EAAO;AACV,SAAKC,KAAL,GAAaD,IAAb;AACH;;AACDE,EAAAA,aAAa,CAACC,KAAD,EAAQ;AACjB,SAAKC,WAAL,GAAmBD,KAAnB;AACH;;AACQ,MAALE,KAAK,GAAG;AACR,WAAO,KAAKlB,MAAZ;AACH;;AACU,MAAPmB,OAAO,GAAG;AACV,WAAO,KAAKC,QAAZ;AACH;;AACe,MAAZC,YAAY,GAAG;AACf,WAAO,KAAKT,aAAZ;AACH;;AAEa,MAAVU,UAAU,GAAG;AACb,WAAO,KAAKL,WAAZ;AACH;;AACO,MAAJJ,IAAI,GAAG;AACP,WAAO,KAAKC,KAAZ;AACH;;AACQ,MAALS,KAAK,GAAG;AACR,WAAO,KAAKC,MAAZ;AACH,GArD0B,CAsD3B;;;AACW,MAAPC,OAAO,GAAE;AACT,WAAO,KAAKzB,MAAZ;AACH;;AACU,MAAP0B,OAAO,GAAE;AACT,WAAO,KAAKvB,MAAZ;AACH;;AA5D0B","sourcesContent":["import {makeAutoObservable} from 'mobx' //изменения \r\n\r\n\r\nexport default class PhotoStore{\r\n    constructor(){\r\n        this._types =[\r\n            {id:1, name:'Ваши фото'},\r\n            { id:2, name:'Популярные фото'},\r\n            { id:3, name:'Фото друзей'},\r\n            { id:2, name:'Фото природы'},\r\n            { id:2, name:'Смешные фото'},\r\n        ]\r\n        this._photo =[\r\n            {id:1, name: \"Фотография любимой\",img:'Фото солнышка' },\r\n            {id:2, name: \"Фотография себя\",img:''}\r\n        ]\r\n\r\n        makeAutoObservable(this)//слежка за изменениями\r\n\r\n    }//при изменении перерендеринг\r\n\r\n    setTypes(bool){\r\n        this._types = bool\r\n    }\r\n\r\n    setPhoto(user){\r\n        this._photo = user\r\n    }\r\n    setSelectedType(type) {\r\n        this.setPage(1)\r\n        this._selectedType = type\r\n    }\r\n    setPage(page) {\r\n        this._page = page\r\n    }\r\n    setTotalCount(count) {\r\n        this._totalCount = count\r\n    }\r\n    get types() {\r\n        return this._types\r\n    }\r\n    get devices() {\r\n        return this._devices\r\n    }\r\n    get selectedType() {\r\n        return this._selectedType\r\n    }\r\n\r\n    get totalCount() {\r\n        return this._totalCount\r\n    }\r\n    get page() {\r\n        return this._page\r\n    }\r\n    get limit() {\r\n        return this._limit\r\n    }\r\n    //компьютед функции, вызываются только при изменении\r\n    get isTypes(){\r\n        return this._types\r\n    }\r\n    get isPhoto(){\r\n        return this._photo\r\n    }\r\n\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}